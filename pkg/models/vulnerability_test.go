package models

import (
	"encoding/json"
	"testing"

	"gopkg.in/yaml.v3"
)

func TestAffected_MarshalJSONWithPackage(t *testing.T) {
	v := Vulnerability{
		ID: "TEST-0000",
		Affected: []Affected{
			{
				Package:  Package{Ecosystem: EcosystemPyPI, Name: "requests"},
				Versions: []string{"1.0.0"},
			},
		},
	}
	got, err := json.Marshal(v)
	if err != nil {
		t.Fatalf("Marshal() = %v; want no error", err)
	}
	want := `{"id":"TEST-0000","modified":"0001-01-01T00:00:00Z","published":"0001-01-01T00:00:00Z","affected":[{"versions":["1.0.0"],"package":{"ecosystem":"PyPI","name":"requests"}}]}`
	if string(got) != want {
		t.Errorf("Marshal() = %v; want %v", string(got), want)
	}
}

func TestAffected_MarshalJSONWithoutPackage(t *testing.T) {
	v := Vulnerability{
		ID: "TEST-0000",
		Affected: []Affected{
			{
				Versions: []string{"1.0.0"},
			},
		},
	}
	got, err := json.Marshal(v)
	if err != nil {
		t.Fatalf("Marshal() = %v; want no error", err)
	}
	want := `{"id":"TEST-0000","modified":"0001-01-01T00:00:00Z","published":"0001-01-01T00:00:00Z","affected":[{"versions":["1.0.0"]}]}`
	if string(got) != want {
		t.Errorf("Marshal() = %v; want %v", string(got), want)
	}
}

func TestAffected_MarshalYAMLWithPackage(t *testing.T) {
	v := Vulnerability{
		ID: "TEST-0000",
		Affected: []Affected{
			{
				Package:  Package{Ecosystem: EcosystemPyPI, Name: "requests"},
				Versions: []string{"1.0.0"},
			},
		},
	}
	got, err := yaml.Marshal(v)
	if err != nil {
		t.Fatalf("Marshal() = %v; want no error", err)
	}
	want := `id: TEST-0000
modified: 0001-01-01T00:00:00Z
affected:
    - package:
        ecosystem: PyPI
        name: requests
      versions:
        - 1.0.0
`
	if string(got) != want {
		t.Errorf("Marshal() = %v; want %v", string(got), want)
	}
}

func TestAffected_MarshalYAMLWithoutPackage(t *testing.T) {
	v := Vulnerability{
		ID: "TEST-0000",
		Affected: []Affected{
			{
				Versions: []string{"1.0.0"},
			},
		},
	}
	got, err := yaml.Marshal(v)
	if err != nil {
		t.Fatalf("Marshal() = %v; want no error", err)
	}
	want := `id: TEST-0000
modified: 0001-01-01T00:00:00Z
affected:
    - versions:
        - 1.0.0
`
	if string(got) != want {
		t.Errorf("Marshal() = %v; want %v", string(got), want)
	}
}
